[build-system]
requires = ["setuptools>=62.3"]
build-backend = "setuptools.build_meta"

[project]
name = "yamaha_ynca"
version = "0.0.0"
license = { text = "MIT License" }
description = "Custom integration for Home Assistant to support Yamaha AV receivers with the YNCA protocol (serial and network)."
authors = [{ name = "Michel van de Wetering", email = "michel.van.de.wetering+yamaha_ynca@gmail.com"}]
maintainers = [{ name = "Michel van de Wetering", email = "michel.van.de.wetering+yamaha_ynca@gmail.com"}]
readme = "README.md"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Topic :: Home Automation",
]
keywords = [
  "custom component",
  "custom integration",
  "hacs",
  "home-assistant",
  "home-assistant-custom-component",
  "homeassistant",
  "integration",
  "yamaha-avr",
  "yamaha-receiver",
]
requires-python = ">=3.13"
dependencies = [
    "ynca==5.19.0",
]

[project.urls]
Documentation = "https://github.com/mvdwetering/yamaha_ynca"
Changelog = "https://github.com/mvdwetering/yamaha_ynca/releases"
Issues = "https://github.com/mvdwetering/yamaha_ynca/issues"
Repository = "https://github.com/mvdwetering/yamaha_ynca"

[project.optional-dependencies]
dev = [
    "mypy==1.15.0",
    "ruff==0.9.7",
    "pytest>=7.0.0",
    "pytest-cov",
    "pytest-mock",
    "pytest-homeassistant-custom-component==0.13.210",
    "awesomeversion>=24.0.0",
    "homeassistant-stubs==2025.2.0",
]

[tool.pytest.ini_options]
addopts = "--cov=custom_components/yamaha_ynca --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests",
]
exclude_also = [
    # # TYPE_CHECKING block is only executed while running mypy
    "if TYPE_CHECKING:"
]

[tool.ruff]
src = ["custom_components/yamaha_ynca"]

[tool.ruff.lint]
ignore = [
  "A005", # It is just wrong
  "ANN401", # Opiniated warning on disallowing dynamically typed expressions
  "D203", # Conflicts with other rules
  "D213", # Conflicts with other rules
  "RUF012", # Just broken
  "TID252", # Relative imports

  # Formatter conflicts
  "COM812",
  "COM819",
  "D206",
  "E501",
  "ISC001",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",
]
select = ["ALL"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"homeassistant.helpers.area_registry" = "ar"
"homeassistant.helpers.config_validation" = "cv"
"homeassistant.helpers.device_registry" = "dr"
"homeassistant.helpers.entity_registry" = "er"
"homeassistant.helpers.issue_registry" = "ir"
voluptuous = "vol"

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = [
    "custom_components",
    "ynca",
]
known-third-party = [
    "homeassistant",
]
combine-as-imports = true

[tool.pylint."MESSAGES CONTROL"]
# Reasons disabled:
# format - handled by ruff
# duplicate-code - unavoidable
# used-before-assignment - false positives with TYPE_CHECKING structures
disable = [
  "abstract-method",
  "duplicate-code",
  "format",
  "unexpected-keyword-arg",
  "used-before-assignment",
]
